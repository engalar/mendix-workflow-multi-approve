// This file was generated by Mendix Studio Pro.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package workflowcommons.proxies.microflows;

import java.util.HashMap;
import java.util.Map;
import com.mendix.core.Core;
import com.mendix.core.CoreException;
import com.mendix.systemwideinterfaces.MendixRuntimeException;
import com.mendix.systemwideinterfaces.core.IContext;
import com.mendix.systemwideinterfaces.core.IMendixObject;

public class Microflows
{
	// These are the microflows for the WorkflowCommons module
	public static void aCT_Attachment_Create(IContext context, system.proxies.WorkflowInstance _workflow)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("Workflow", _workflow == null ? null : _workflow.getMendixObject());
		Core.microflowCall("WorkflowCommons.ACT_Attachment_Create").withParams(params).execute(context);
	}
	public static void aCT_Attachment_Delete(IContext context, workflowcommons.proxies.WorkflowAttachment _workflowAttachment)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("WorkflowAttachment", _workflowAttachment == null ? null : _workflowAttachment.getMendixObject());
		Core.microflowCall("WorkflowCommons.ACT_Attachment_Delete").withParams(params).execute(context);
	}
	public static void aCT_Attachment_Download(IContext context, system.proxies.FileDocument _fileDoc)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("FileDoc", _fileDoc == null ? null : _fileDoc.getMendixObject());
		Core.microflowCall("WorkflowCommons.ACT_Attachment_Download").withParams(params).execute(context);
	}
	public static void aCT_Attachment_Save(IContext context, workflowcommons.proxies.WorkflowAttachment _workflowAttachment)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("WorkflowAttachment", _workflowAttachment == null ? null : _workflowAttachment.getMendixObject());
		Core.microflowCall("WorkflowCommons.ACT_Attachment_Save").withParams(params).execute(context);
	}
	public static void aCT_Comment_ActivateEditMode(IContext context, workflowcommons.proxies.WorkflowCommentHelper _workflowCommentHelper, workflowcommons.proxies.WorkflowComment _workflowComment)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("WorkflowCommentHelper", _workflowCommentHelper == null ? null : _workflowCommentHelper.getMendixObject());
		params.put("WorkflowComment", _workflowComment == null ? null : _workflowComment.getMendixObject());
		Core.microflowCall("WorkflowCommons.ACT_Comment_ActivateEditMode").withParams(params).execute(context);
	}
	public static void aCT_Comment_Delete(IContext context, workflowcommons.proxies.WorkflowComment _workflowComment)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("WorkflowComment", _workflowComment == null ? null : _workflowComment.getMendixObject());
		Core.microflowCall("WorkflowCommons.ACT_Comment_Delete").withParams(params).execute(context);
	}
	public static void aCT_Comment_Revert(IContext context, workflowcommons.proxies.WorkflowCommentHelper _workflowCommentHelper)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("WorkflowCommentHelper", _workflowCommentHelper == null ? null : _workflowCommentHelper.getMendixObject());
		Core.microflowCall("WorkflowCommons.ACT_Comment_Revert").withParams(params).execute(context);
	}
	public static void aCT_UserTask_AssignToMe(IContext context, system.proxies.WorkflowUserTask _workflowUserTask)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("WorkflowUserTask", _workflowUserTask == null ? null : _workflowUserTask.getMendixObject());
		Core.microflowCall("WorkflowCommons.ACT_UserTask_AssignToMe").withParams(params).execute(context);
	}
	public static void aCT_UserTask_AssignToMe_UpdateTaskCount(IContext context, system.proxies.WorkflowUserTask _userTask, workflowcommons.proxies.TaskCount _taskCount)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("UserTask", _userTask == null ? null : _userTask.getMendixObject());
		params.put("TaskCount", _taskCount == null ? null : _taskCount.getMendixObject());
		Core.microflowCall("WorkflowCommons.ACT_UserTask_AssignToMe_UpdateTaskCount").withParams(params).execute(context);
	}
	public static void aCT_UserTask_AssignToUser(IContext context, system.proxies.WorkflowUserTask _workflowUserTask, system.proxies.User _user)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("WorkflowUserTask", _workflowUserTask == null ? null : _workflowUserTask.getMendixObject());
		params.put("User", _user == null ? null : _user.getMendixObject());
		Core.microflowCall("WorkflowCommons.ACT_UserTask_AssignToUser").withParams(params).execute(context);
	}
	public static void aCT_UserTask_Unassign(IContext context, system.proxies.WorkflowUserTask _userTask)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("UserTask", _userTask == null ? null : _userTask.getMendixObject());
		Core.microflowCall("WorkflowCommons.ACT_UserTask_Unassign").withParams(params).execute(context);
	}
	public static void aCT_Workflow_Abort(IContext context, system.proxies.WorkflowInstance _workflowInstance)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("WorkflowInstance", _workflowInstance == null ? null : _workflowInstance.getMendixObject());
		Core.microflowCall("WorkflowCommons.ACT_Workflow_Abort").withParams(params).execute(context);
	}
	public static void aCT_WorkflowCommentHelper_SaveEdit(IContext context, workflowcommons.proxies.WorkflowCommentHelper _workflowCommentHelper, workflowcommons.proxies.WorkflowComment _workflowComment)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("WorkflowCommentHelper", _workflowCommentHelper == null ? null : _workflowCommentHelper.getMendixObject());
		params.put("WorkflowComment", _workflowComment == null ? null : _workflowComment.getMendixObject());
		Core.microflowCall("WorkflowCommons.ACT_WorkflowCommentHelper_SaveEdit").withParams(params).execute(context);
	}
	public static void aCT_WorkflowCommentHelper_SaveNew(IContext context, workflowcommons.proxies.WorkflowCommentHelper _workflowCommentHelper, system.proxies.WorkflowInstance _workflow)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("WorkflowCommentHelper", _workflowCommentHelper == null ? null : _workflowCommentHelper.getMendixObject());
		params.put("Workflow", _workflow == null ? null : _workflow.getMendixObject());
		Core.microflowCall("WorkflowCommons.ACT_WorkflowCommentHelper_SaveNew").withParams(params).execute(context);
	}
	public static void aCT_WorkflowInstance_Withdraw(IContext context, system.proxies.WorkflowInstance _workflowInstance)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("WorkflowInstance", _workflowInstance == null ? null : _workflowInstance.getMendixObject());
		Core.microflowCall("WorkflowCommons.ACT_WorkflowInstance_Withdraw").withParams(params).execute(context);
	}
	public static void aCT_WorkflowInstance_WithdrawConfirmation(IContext context, workflowcommons.proxies.WorkflowComment _workflowComment)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("WorkflowComment", _workflowComment == null ? null : _workflowComment.getMendixObject());
		Core.microflowCall("WorkflowCommons.ACT_WorkflowInstance_WithdrawConfirmation").withParams(params).execute(context);
	}
	public static void aCT_WorkflowTaskInstance_AssignUser(IContext context, mendixsso.proxies.MendixSSOUser _mendixSSOUser, system.proxies.WorkflowUserTask _workflowUserTask)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("MendixSSOUser", _mendixSSOUser == null ? null : _mendixSSOUser.getMendixObject());
		params.put("WorkflowUserTask", _workflowUserTask == null ? null : _workflowUserTask.getMendixObject());
		Core.microflowCall("WorkflowCommons.ACT_WorkflowTaskInstance_AssignUser").withParams(params).execute(context);
	}
	public static workflowcommons.proxies.TaskCount dS_TaskCount(IContext context)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		IMendixObject result = (IMendixObject)Core.microflowCall("WorkflowCommons.DS_TaskCount").withParams(params).execute(context);
		return result == null ? null : workflowcommons.proxies.TaskCount.initialize(context, result);
	}
	public static workflowcommons.proxies.DashboardContext dS_TaskDashboard(IContext context)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		IMendixObject result = (IMendixObject)Core.microflowCall("WorkflowCommons.DS_TaskDashboard").withParams(params).execute(context);
		return result == null ? null : workflowcommons.proxies.DashboardContext.initialize(context, result);
	}
	public static java.util.List<workflowcommons.proxies.TaskSeries> dS_TaskSeries(IContext context, workflowcommons.proxies.DashboardContext _dashboardContext)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("DashboardContext", _dashboardContext == null ? null : _dashboardContext.getMendixObject());
		java.util.List<IMendixObject> objs = Core.microflowCall("WorkflowCommons.DS_TaskSeries").withParams(params).execute(context);
		java.util.List<workflowcommons.proxies.TaskSeries> result = null;
		if (objs != null)
		{
			result = new java.util.ArrayList<>();
			for (IMendixObject obj : objs)
				result.add(workflowcommons.proxies.TaskSeries.initialize(context, obj));
		}
		return result;
	}
	public static java.util.List<workflowcommons.proxies.UserTaskTimeLine> dS_UserTaskTimeline(IContext context, system.proxies.WorkflowInstance _workflowInstance)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("WorkflowInstance", _workflowInstance == null ? null : _workflowInstance.getMendixObject());
		java.util.List<IMendixObject> objs = Core.microflowCall("WorkflowCommons.DS_UserTaskTimeline").withParams(params).execute(context);
		java.util.List<workflowcommons.proxies.UserTaskTimeLine> result = null;
		if (objs != null)
		{
			result = new java.util.ArrayList<>();
			for (IMendixObject obj : objs)
				result.add(workflowcommons.proxies.UserTaskTimeLine.initialize(context, obj));
		}
		return result;
	}
	public static workflowcommons.proxies.WorkflowCommentHelper dS_WorkflowCommentHelper_InitializeEdit(IContext context, workflowcommons.proxies.WorkflowComment _workflowComment)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("WorkflowComment", _workflowComment == null ? null : _workflowComment.getMendixObject());
		IMendixObject result = (IMendixObject)Core.microflowCall("WorkflowCommons.DS_WorkflowCommentHelper_InitializeEdit").withParams(params).execute(context);
		return result == null ? null : workflowcommons.proxies.WorkflowCommentHelper.initialize(context, result);
	}
	public static workflowcommons.proxies.WorkflowCommentHelper dS_WorkflowCommentHelper_InitializeNew(IContext context)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		IMendixObject result = (IMendixObject)Core.microflowCall("WorkflowCommons.DS_WorkflowCommentHelper_InitializeNew").withParams(params).execute(context);
		return result == null ? null : workflowcommons.proxies.WorkflowCommentHelper.initialize(context, result);
	}
	public static workflowcommons.proxies.DashboardContext dS_WorkflowDashboard(IContext context)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		IMendixObject result = (IMendixObject)Core.microflowCall("WorkflowCommons.DS_WorkflowDashboard").withParams(params).execute(context);
		return result == null ? null : workflowcommons.proxies.DashboardContext.initialize(context, result);
	}
	public static java.util.List<workflowcommons.proxies.WorkflowSummary> dS_WorkflowDefinition_Overview(IContext context)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		java.util.List<IMendixObject> objs = Core.microflowCall("WorkflowCommons.DS_WorkflowDefinition_Overview").withParams(params).execute(context);
		java.util.List<workflowcommons.proxies.WorkflowSummary> result = null;
		if (objs != null)
		{
			result = new java.util.ArrayList<>();
			for (IMendixObject obj : objs)
				result.add(workflowcommons.proxies.WorkflowSummary.initialize(context, obj));
		}
		return result;
	}
	public static java.util.List<system.proxies.WorkflowDefinition> dS_WorkflowDefinition_Selectable(IContext context)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		java.util.List<IMendixObject> objs = Core.microflowCall("WorkflowCommons.DS_WorkflowDefinition_Selectable").withParams(params).execute(context);
		java.util.List<system.proxies.WorkflowDefinition> result = null;
		if (objs != null)
		{
			result = new java.util.ArrayList<>();
			for (IMendixObject obj : objs)
				result.add(system.proxies.WorkflowDefinition.initialize(context, obj));
		}
		return result;
	}
	public static java.util.List<system.proxies.WorkflowInstance> dS_WorkflowInstance(IContext context, workflowcommons.proxies.DashboardContext _dashboardContext)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("DashboardContext", _dashboardContext == null ? null : _dashboardContext.getMendixObject());
		java.util.List<IMendixObject> objs = Core.microflowCall("WorkflowCommons.DS_WorkflowInstance").withParams(params).execute(context);
		java.util.List<system.proxies.WorkflowInstance> result = null;
		if (objs != null)
		{
			result = new java.util.ArrayList<>();
			for (IMendixObject obj : objs)
				result.add(system.proxies.WorkflowInstance.initialize(context, obj));
		}
		return result;
	}
	public static java.util.List<workflowcommons.proxies.WorkflowSeries> dS_WorkflowSeries(IContext context, workflowcommons.proxies.DashboardContext _dashboardContext)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("DashboardContext", _dashboardContext == null ? null : _dashboardContext.getMendixObject());
		java.util.List<IMendixObject> objs = Core.microflowCall("WorkflowCommons.DS_WorkflowSeries").withParams(params).execute(context);
		java.util.List<workflowcommons.proxies.WorkflowSeries> result = null;
		if (objs != null)
		{
			result = new java.util.ArrayList<>();
			for (IMendixObject obj : objs)
				result.add(workflowcommons.proxies.WorkflowSeries.initialize(context, obj));
		}
		return result;
	}
	public static java.util.List<system.proxies.WorkflowUserTask> dS_WorkflowTask(IContext context, workflowcommons.proxies.DashboardContext _dashboardContext)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("DashboardContext", _dashboardContext == null ? null : _dashboardContext.getMendixObject());
		java.util.List<IMendixObject> objs = Core.microflowCall("WorkflowCommons.DS_WorkflowTask").withParams(params).execute(context);
		java.util.List<system.proxies.WorkflowUserTask> result = null;
		if (objs != null)
		{
			result = new java.util.ArrayList<>();
			for (IMendixObject obj : objs)
				result.add(system.proxies.WorkflowUserTask.initialize(context, obj));
		}
		return result;
	}
	public static java.util.List<system.proxies.WorkflowUserTask> dS_WorkflowTask_AssignedToUser(IContext context, workflowcommons.proxies.DashboardContext _dashboardContext)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("DashboardContext", _dashboardContext == null ? null : _dashboardContext.getMendixObject());
		java.util.List<IMendixObject> objs = Core.microflowCall("WorkflowCommons.DS_WorkflowTask_AssignedToUser").withParams(params).execute(context);
		java.util.List<system.proxies.WorkflowUserTask> result = null;
		if (objs != null)
		{
			result = new java.util.ArrayList<>();
			for (IMendixObject obj : objs)
				result.add(system.proxies.WorkflowUserTask.initialize(context, obj));
		}
		return result;
	}
	public static java.util.List<system.proxies.WorkflowTaskDefinition> dS_WorkflowTaskDefinition_Selectable_Administrator(IContext context, workflowcommons.proxies.DashboardContext _dashboardContext)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("DashboardContext", _dashboardContext == null ? null : _dashboardContext.getMendixObject());
		java.util.List<IMendixObject> objs = Core.microflowCall("WorkflowCommons.DS_WorkflowTaskDefinition_Selectable_Administrator").withParams(params).execute(context);
		java.util.List<system.proxies.WorkflowTaskDefinition> result = null;
		if (objs != null)
		{
			result = new java.util.ArrayList<>();
			for (IMendixObject obj : objs)
				result.add(system.proxies.WorkflowTaskDefinition.initialize(context, obj));
		}
		return result;
	}
	public static java.util.List<system.proxies.WorkflowTaskDefinition> dS_WorkflowTaskDefinition_Selectable_User(IContext context, workflowcommons.proxies.DashboardContext _dashboardContext)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("DashboardContext", _dashboardContext == null ? null : _dashboardContext.getMendixObject());
		java.util.List<IMendixObject> objs = Core.microflowCall("WorkflowCommons.DS_WorkflowTaskDefinition_Selectable_User").withParams(params).execute(context);
		java.util.List<system.proxies.WorkflowTaskDefinition> result = null;
		if (objs != null)
		{
			result = new java.util.ArrayList<>();
			for (IMendixObject obj : objs)
				result.add(system.proxies.WorkflowTaskDefinition.initialize(context, obj));
		}
		return result;
	}
	public static java.util.List<workflowcommons.proxies.WorkflowTaskDetail> dS_WorkflowTaskDetail(IContext context, workflowcommons.proxies.DashboardContext _dashboardContext)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("DashboardContext", _dashboardContext == null ? null : _dashboardContext.getMendixObject());
		java.util.List<IMendixObject> objs = Core.microflowCall("WorkflowCommons.DS_WorkflowTaskDetail").withParams(params).execute(context);
		java.util.List<workflowcommons.proxies.WorkflowTaskDetail> result = null;
		if (objs != null)
		{
			result = new java.util.ArrayList<>();
			for (IMendixObject obj : objs)
				result.add(workflowcommons.proxies.WorkflowTaskDetail.initialize(context, obj));
		}
		return result;
	}
	public static void oCh_DashboardContext_UpdateTaskDashboard(IContext context, workflowcommons.proxies.DashboardContext _dashboardContext)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("DashboardContext", _dashboardContext == null ? null : _dashboardContext.getMendixObject());
		Core.microflowCall("WorkflowCommons.OCh_DashboardContext_UpdateTaskDashboard").withParams(params).execute(context);
	}
	public static void oCh_DashboardContext_UpdateWorkflowDashboard(IContext context, workflowcommons.proxies.DashboardContext _dashboardContext)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("DashboardContext", _dashboardContext == null ? null : _dashboardContext.getMendixObject());
		Core.microflowCall("WorkflowCommons.OCh_DashboardContext_UpdateWorkflowDashboard").withParams(params).execute(context);
	}
	public static void oCl_WorkflowSummary(IContext context, workflowcommons.proxies.WorkflowSummary _workflowSummary)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("WorkflowSummary", _workflowSummary == null ? null : _workflowSummary.getMendixObject());
		Core.microflowCall("WorkflowCommons.OCl_WorkflowSummary").withParams(params).execute(context);
	}
	public static workflowcommons.proxies.DashboardContext sUB_DashboardContext_RetrieveOrCreate(IContext context)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		IMendixObject result = (IMendixObject)Core.microflowCall("WorkflowCommons.SUB_DashboardContext_RetrieveOrCreate").withParams(params).execute(context);
		return result == null ? null : workflowcommons.proxies.DashboardContext.initialize(context, result);
	}
	public static void sUB_DashboardContext_UpdateSettings(IContext context, workflowcommons.proxies.DashboardContext _dashboardContext)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("DashboardContext", _dashboardContext == null ? null : _dashboardContext.getMendixObject());
		Core.microflowCall("WorkflowCommons.SUB_DashboardContext_UpdateSettings").withParams(params).execute(context);
	}
	public static void sUB_TaskCount_Update(IContext context, workflowcommons.proxies.TaskCount _taskCount)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("TaskCount", _taskCount == null ? null : _taskCount.getMendixObject());
		Core.microflowCall("WorkflowCommons.SUB_TaskCount_Update").withParams(params).execute(context);
	}
	public static void sUB_TaskDashboard_Update(IContext context, workflowcommons.proxies.DashboardContext _dashboardContext)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("DashboardContext", _dashboardContext == null ? null : _dashboardContext.getMendixObject());
		Core.microflowCall("WorkflowCommons.SUB_TaskDashboard_Update").withParams(params).execute(context);
	}
	public static void sUB_TaskSeries_CreateOrUpdate(IContext context, workflowcommons.proxies.DashboardContext _dashboardContext, system.proxies.WorkflowDefinition _workflowDefinition_Selected, system.proxies.User _user, system.proxies.WorkflowTaskDefinition _taskDefinition_Selected)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("DashboardContext", _dashboardContext == null ? null : _dashboardContext.getMendixObject());
		params.put("WorkflowDefinition_Selected", _workflowDefinition_Selected == null ? null : _workflowDefinition_Selected.getMendixObject());
		params.put("User", _user == null ? null : _user.getMendixObject());
		params.put("TaskDefinition_Selected", _taskDefinition_Selected == null ? null : _taskDefinition_Selected.getMendixObject());
		Core.microflowCall("WorkflowCommons.SUB_TaskSeries_CreateOrUpdate").withParams(params).execute(context);
	}
	public static void sUB_TaskSeriesList_Delete(IContext context, workflowcommons.proxies.DashboardContext _dashboardContext)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("DashboardContext", _dashboardContext == null ? null : _dashboardContext.getMendixObject());
		Core.microflowCall("WorkflowCommons.SUB_TaskSeriesList_Delete").withParams(params).execute(context);
	}
	public static void sUB_TaskSummary_CreateOrUpdate(IContext context, workflowcommons.proxies.DashboardContext _dashboardContext, system.proxies.WorkflowDefinition _workflowDefinition_Selected, boolean _admin, system.proxies.WorkflowTaskDefinition _taskDefinition_Selected)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("DashboardContext", _dashboardContext == null ? null : _dashboardContext.getMendixObject());
		params.put("WorkflowDefinition_Selected", _workflowDefinition_Selected == null ? null : _workflowDefinition_Selected.getMendixObject());
		params.put("Admin", _admin);
		params.put("TaskDefinition_Selected", _taskDefinition_Selected == null ? null : _taskDefinition_Selected.getMendixObject());
		Core.microflowCall("WorkflowCommons.SUB_TaskSummary_CreateOrUpdate").withParams(params).execute(context);
	}
	public static workflowcommons.proxies.TaskSummary sUB_TaskSummary_RetrieveOrCreate(IContext context, workflowcommons.proxies.DashboardContext _dashboardContext)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("DashboardContext", _dashboardContext == null ? null : _dashboardContext.getMendixObject());
		IMendixObject result = (IMendixObject)Core.microflowCall("WorkflowCommons.SUB_TaskSummary_RetrieveOrCreate").withParams(params).execute(context);
		return result == null ? null : workflowcommons.proxies.TaskSummary.initialize(context, result);
	}
	public static void sUB_UserTask_Assign(IContext context, system.proxies.User _user, system.proxies.WorkflowUserTask _workflowUserTask)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("User", _user == null ? null : _user.getMendixObject());
		params.put("WorkflowUserTask", _workflowUserTask == null ? null : _workflowUserTask.getMendixObject());
		Core.microflowCall("WorkflowCommons.SUB_UserTask_Assign").withParams(params).execute(context);
	}
	public static java.util.List<system.proxies.WorkflowUserTask> sUB_UserTask_AssignedToUser(IContext context, java.util.Date _completedOrStartedAfter, java.util.Date _completedOrStartedBefore, system.proxies.WorkflowDefinition _workflowDefinition_Selected, system.proxies.User _user, system.proxies.WorkflowTaskDefinition _taskDefinition_Selected)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("CompletedOrStartedAfter", _completedOrStartedAfter);
		params.put("CompletedOrStartedBefore", _completedOrStartedBefore);
		params.put("WorkflowDefinition_Selected", _workflowDefinition_Selected == null ? null : _workflowDefinition_Selected.getMendixObject());
		params.put("User", _user == null ? null : _user.getMendixObject());
		params.put("TaskDefinition_Selected", _taskDefinition_Selected == null ? null : _taskDefinition_Selected.getMendixObject());
		java.util.List<IMendixObject> objs = Core.microflowCall("WorkflowCommons.SUB_UserTask_AssignedToUser").withParams(params).execute(context);
		java.util.List<system.proxies.WorkflowUserTask> result = null;
		if (objs != null)
		{
			result = new java.util.ArrayList<>();
			for (IMendixObject obj : objs)
				result.add(system.proxies.WorkflowUserTask.initialize(context, obj));
		}
		return result;
	}
	public static java.math.BigDecimal sUB_UserTask_AverageHandlingTime(IContext context, java.util.Date _completedAfter, java.util.Date _completedBefore, system.proxies.WorkflowTaskDefinition _taskDefinition_Selected, system.proxies.User _user, system.proxies.WorkflowDefinition _workflowDefinition_Selected, java.lang.Long _userTask_CountCompleted)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("CompletedAfter", _completedAfter);
		params.put("CompletedBefore", _completedBefore);
		params.put("TaskDefinition_Selected", _taskDefinition_Selected == null ? null : _taskDefinition_Selected.getMendixObject());
		params.put("User", _user == null ? null : _user.getMendixObject());
		params.put("WorkflowDefinition_Selected", _workflowDefinition_Selected == null ? null : _workflowDefinition_Selected.getMendixObject());
		params.put("UserTask_CountCompleted", _userTask_CountCompleted);
		return (java.math.BigDecimal) Core.microflowCall("WorkflowCommons.SUB_UserTask_AverageHandlingTime").withParams(params).execute(context);
	}
	public static java.lang.Long sUB_UserTask_CountCompleted(IContext context, java.util.Date _completedAfter, java.util.Date _completedBefore, system.proxies.WorkflowTaskDefinition _taskDefinition_Selected, system.proxies.WorkflowDefinition _workflowDefinition_Selected, system.proxies.User _user)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("CompletedAfter", _completedAfter);
		params.put("CompletedBefore", _completedBefore);
		params.put("TaskDefinition_Selected", _taskDefinition_Selected == null ? null : _taskDefinition_Selected.getMendixObject());
		params.put("WorkflowDefinition_Selected", _workflowDefinition_Selected == null ? null : _workflowDefinition_Selected.getMendixObject());
		params.put("User", _user == null ? null : _user.getMendixObject());
		return (java.lang.Long) Core.microflowCall("WorkflowCommons.SUB_UserTask_CountCompleted").withParams(params).execute(context);
	}
	public static java.lang.Long sUB_UserTask_CountCompletedOnTime(IContext context, java.util.Date _completedAfter, java.util.Date _completedBefore, system.proxies.WorkflowDefinition _workflowDefinition_Selected, system.proxies.User _user, system.proxies.WorkflowTaskDefinition _taskDefinition_Selected)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("CompletedAfter", _completedAfter);
		params.put("CompletedBefore", _completedBefore);
		params.put("WorkflowDefinition_Selected", _workflowDefinition_Selected == null ? null : _workflowDefinition_Selected.getMendixObject());
		params.put("User", _user == null ? null : _user.getMendixObject());
		params.put("TaskDefinition_Selected", _taskDefinition_Selected == null ? null : _taskDefinition_Selected.getMendixObject());
		return (java.lang.Long) Core.microflowCall("WorkflowCommons.SUB_UserTask_CountCompletedOnTime").withParams(params).execute(context);
	}
	public static java.lang.Long sUB_UserTask_CountCompletedOverdue(IContext context, java.util.Date _completedAfter, java.util.Date _completedBefore, system.proxies.WorkflowDefinition _workflowDefinition_Selected, system.proxies.User _user, system.proxies.WorkflowTaskDefinition _taskDefinition_Selected)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("CompletedAfter", _completedAfter);
		params.put("CompletedBefore", _completedBefore);
		params.put("WorkflowDefinition_Selected", _workflowDefinition_Selected == null ? null : _workflowDefinition_Selected.getMendixObject());
		params.put("User", _user == null ? null : _user.getMendixObject());
		params.put("TaskDefinition_Selected", _taskDefinition_Selected == null ? null : _taskDefinition_Selected.getMendixObject());
		return (java.lang.Long) Core.microflowCall("WorkflowCommons.SUB_UserTask_CountCompletedOverdue").withParams(params).execute(context);
	}
	public static java.lang.Long sUB_UserTask_CountFailed(IContext context, java.util.Date _completedAfter, java.util.Date _completedBefore, system.proxies.User _user, system.proxies.WorkflowDefinition _workflowDefinition_Selected, system.proxies.WorkflowTaskDefinition _taskDefinition_Selected)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("CompletedAfter", _completedAfter);
		params.put("CompletedBefore", _completedBefore);
		params.put("User", _user == null ? null : _user.getMendixObject());
		params.put("WorkflowDefinition_Selected", _workflowDefinition_Selected == null ? null : _workflowDefinition_Selected.getMendixObject());
		params.put("TaskDefinition_Selected", _taskDefinition_Selected == null ? null : _taskDefinition_Selected.getMendixObject());
		return (java.lang.Long) Core.microflowCall("WorkflowCommons.SUB_UserTask_CountFailed").withParams(params).execute(context);
	}
	public static java.lang.Long sUB_UserTask_CountInProgress(IContext context, java.util.Date _startedAfter, java.util.Date _startedBefore, system.proxies.WorkflowTaskDefinition _taskDefinition_Selected, system.proxies.User _user, system.proxies.WorkflowDefinition _workflowDefinition_Selected)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("StartedAfter", _startedAfter);
		params.put("StartedBefore", _startedBefore);
		params.put("TaskDefinition_Selected", _taskDefinition_Selected == null ? null : _taskDefinition_Selected.getMendixObject());
		params.put("User", _user == null ? null : _user.getMendixObject());
		params.put("WorkflowDefinition_Selected", _workflowDefinition_Selected == null ? null : _workflowDefinition_Selected.getMendixObject());
		return (java.lang.Long) Core.microflowCall("WorkflowCommons.SUB_UserTask_CountInProgress").withParams(params).execute(context);
	}
	public static java.lang.Long sUB_UserTask_CountOverdue(IContext context, java.util.Date _completedAfter, java.util.Date _completedBefore, system.proxies.WorkflowDefinition _workflowDefinition_Selected, system.proxies.User _user, system.proxies.WorkflowTaskDefinition _taskDefinition_Selected)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("CompletedAfter", _completedAfter);
		params.put("CompletedBefore", _completedBefore);
		params.put("WorkflowDefinition_Selected", _workflowDefinition_Selected == null ? null : _workflowDefinition_Selected.getMendixObject());
		params.put("User", _user == null ? null : _user.getMendixObject());
		params.put("TaskDefinition_Selected", _taskDefinition_Selected == null ? null : _taskDefinition_Selected.getMendixObject());
		return (java.lang.Long) Core.microflowCall("WorkflowCommons.SUB_UserTask_CountOverdue").withParams(params).execute(context);
	}
	public static void sUB_UserTaskTimeline_WorkflowUserTask_SetAssignee(IContext context, workflowcommons.proxies.UserTaskTimeLine _userTaskTimeLine, system.proxies.WorkflowUserTask _workflowUserTask)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("UserTaskTimeLine", _userTaskTimeLine == null ? null : _userTaskTimeLine.getMendixObject());
		params.put("WorkflowUserTask", _workflowUserTask == null ? null : _workflowUserTask.getMendixObject());
		Core.microflowCall("WorkflowCommons.SUB_UserTaskTimeline_WorkflowUserTask_SetAssignee").withParams(params).execute(context);
	}
	public static void sUB_Workflow_Abort(IContext context, system.proxies.WorkflowInstance _workflowInstance)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("WorkflowInstance", _workflowInstance == null ? null : _workflowInstance.getMendixObject());
		Core.microflowCall("WorkflowCommons.SUB_Workflow_Abort").withParams(params).execute(context);
	}
	public static java.math.BigDecimal sUB_Workflow_AverageHandlingTime(IContext context, java.lang.Long _workflowInstance_CountCompleted, java.util.Date _completedAfter, java.util.Date _completedBefore, system.proxies.WorkflowDefinition _workflowDefinition_Selected)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("WorkflowInstance_CountCompleted", _workflowInstance_CountCompleted);
		params.put("CompletedAfter", _completedAfter);
		params.put("CompletedBefore", _completedBefore);
		params.put("WorkflowDefinition_Selected", _workflowDefinition_Selected == null ? null : _workflowDefinition_Selected.getMendixObject());
		return (java.math.BigDecimal) Core.microflowCall("WorkflowCommons.SUB_Workflow_AverageHandlingTime").withParams(params).execute(context);
	}
	public static void sUB_WorkflowDashboard_Update(IContext context, workflowcommons.proxies.DashboardContext _dashboardContext)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("DashboardContext", _dashboardContext == null ? null : _dashboardContext.getMendixObject());
		Core.microflowCall("WorkflowCommons.SUB_WorkflowDashboard_Update").withParams(params).execute(context);
	}
	public static void sUB_WorkflowSeries_CreateOrUpdate(IContext context, workflowcommons.proxies.DashboardContext _dashboardContext, system.proxies.WorkflowDefinition _workflowDefinition_Selected)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("DashboardContext", _dashboardContext == null ? null : _dashboardContext.getMendixObject());
		params.put("WorkflowDefinition_Selected", _workflowDefinition_Selected == null ? null : _workflowDefinition_Selected.getMendixObject());
		Core.microflowCall("WorkflowCommons.SUB_WorkflowSeries_CreateOrUpdate").withParams(params).execute(context);
	}
	public static void sUB_WorkflowSeriesList_Delete(IContext context, workflowcommons.proxies.DashboardContext _dashboardContext)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("DashboardContext", _dashboardContext == null ? null : _dashboardContext.getMendixObject());
		Core.microflowCall("WorkflowCommons.SUB_WorkflowSeriesList_Delete").withParams(params).execute(context);
	}
	public static workflowcommons.proxies.WorkflowSummary sUB_WorkflowSummary_CreateOrUpdate(IContext context, workflowcommons.proxies.DashboardContext _dashboardContext, system.proxies.WorkflowDefinition _workflowDefinition_Selected)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("DashboardContext", _dashboardContext == null ? null : _dashboardContext.getMendixObject());
		params.put("WorkflowDefinition_Selected", _workflowDefinition_Selected == null ? null : _workflowDefinition_Selected.getMendixObject());
		IMendixObject result = (IMendixObject)Core.microflowCall("WorkflowCommons.SUB_WorkflowSummary_CreateOrUpdate").withParams(params).execute(context);
		return result == null ? null : workflowcommons.proxies.WorkflowSummary.initialize(context, result);
	}
	public static workflowcommons.proxies.WorkflowSummary sUB_WorkflowSummary_RetrieveOrCreate(IContext context, workflowcommons.proxies.DashboardContext _dashboardContext)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("DashboardContext", _dashboardContext == null ? null : _dashboardContext.getMendixObject());
		IMendixObject result = (IMendixObject)Core.microflowCall("WorkflowCommons.SUB_WorkflowSummary_RetrieveOrCreate").withParams(params).execute(context);
		return result == null ? null : workflowcommons.proxies.WorkflowSummary.initialize(context, result);
	}
	public static java.math.BigDecimal sUB_WorkflowTask_AverageHandlingTime(IContext context, java.util.Date _completedAfter, java.util.Date _completedBefore, system.proxies.WorkflowTaskDefinition _taskDefinition_Selected)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("CompletedAfter", _completedAfter);
		params.put("CompletedBefore", _completedBefore);
		params.put("TaskDefinition_Selected", _taskDefinition_Selected == null ? null : _taskDefinition_Selected.getMendixObject());
		return (java.math.BigDecimal) Core.microflowCall("WorkflowCommons.SUB_WorkflowTask_AverageHandlingTime").withParams(params).execute(context);
	}
	public static void sUB_WorkflowTaskDetail_CreateOrUpdate(IContext context, workflowcommons.proxies.DashboardContext _dashboardContext, system.proxies.WorkflowDefinition _workflowDefinition_Selected)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("DashboardContext", _dashboardContext == null ? null : _dashboardContext.getMendixObject());
		params.put("WorkflowDefinition_Selected", _workflowDefinition_Selected == null ? null : _workflowDefinition_Selected.getMendixObject());
		Core.microflowCall("WorkflowCommons.SUB_WorkflowTaskDetail_CreateOrUpdate").withParams(params).execute(context);
	}
	public static void sUB_WorkflowTaskDetail_Delete(IContext context, workflowcommons.proxies.DashboardContext _dashboardContext)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("DashboardContext", _dashboardContext == null ? null : _dashboardContext.getMendixObject());
		Core.microflowCall("WorkflowCommons.SUB_WorkflowTaskDetail_Delete").withParams(params).execute(context);
	}
	public static java.lang.Long sUB_Worklow_CountAborted(IContext context, java.util.Date _completedAfter, java.util.Date _completedBefore, system.proxies.WorkflowDefinition _workflowDefinition_Selected)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("CompletedAfter", _completedAfter);
		params.put("CompletedBefore", _completedBefore);
		params.put("WorkflowDefinition_Selected", _workflowDefinition_Selected == null ? null : _workflowDefinition_Selected.getMendixObject());
		return (java.lang.Long) Core.microflowCall("WorkflowCommons.SUB_Worklow_CountAborted").withParams(params).execute(context);
	}
	public static java.lang.Long sUB_Worklow_CountCompleted(IContext context, java.util.Date _completedAfter, java.util.Date _completedBefore, system.proxies.WorkflowDefinition _workflowDefinition_Selected)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("CompletedAfter", _completedAfter);
		params.put("CompletedBefore", _completedBefore);
		params.put("WorkflowDefinition_Selected", _workflowDefinition_Selected == null ? null : _workflowDefinition_Selected.getMendixObject());
		return (java.lang.Long) Core.microflowCall("WorkflowCommons.SUB_Worklow_CountCompleted").withParams(params).execute(context);
	}
	public static java.lang.Long sUB_Worklow_CountCompletedOnTime(IContext context, java.util.Date _completedAfter, java.util.Date _completedBefore, system.proxies.WorkflowDefinition _workflowDefinition_Selected)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("CompletedAfter", _completedAfter);
		params.put("CompletedBefore", _completedBefore);
		params.put("WorkflowDefinition_Selected", _workflowDefinition_Selected == null ? null : _workflowDefinition_Selected.getMendixObject());
		return (java.lang.Long) Core.microflowCall("WorkflowCommons.SUB_Worklow_CountCompletedOnTime").withParams(params).execute(context);
	}
	public static java.lang.Long sUB_Worklow_CountCompletedOverdue(IContext context, java.util.Date _completedAfter, java.util.Date _completedBefore, system.proxies.WorkflowDefinition _workflowDefinition_Selected)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("CompletedAfter", _completedAfter);
		params.put("CompletedBefore", _completedBefore);
		params.put("WorkflowDefinition_Selected", _workflowDefinition_Selected == null ? null : _workflowDefinition_Selected.getMendixObject());
		return (java.lang.Long) Core.microflowCall("WorkflowCommons.SUB_Worklow_CountCompletedOverdue").withParams(params).execute(context);
	}
	public static java.lang.Long sUB_Worklow_CountInProgress(IContext context, java.util.Date _startedAfter, java.util.Date _startedBefore, system.proxies.WorkflowDefinition _workflowDefinition_Selected)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("StartedAfter", _startedAfter);
		params.put("StartedBefore", _startedBefore);
		params.put("WorkflowDefinition_Selected", _workflowDefinition_Selected == null ? null : _workflowDefinition_Selected.getMendixObject());
		return (java.lang.Long) Core.microflowCall("WorkflowCommons.SUB_Worklow_CountInProgress").withParams(params).execute(context);
	}
	public static java.lang.Long sUB_Worklow_CountOverdue(IContext context, java.util.Date _completedAfter, java.util.Date _completedBefore, system.proxies.WorkflowDefinition _workflowDefinition_Selected)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("CompletedAfter", _completedAfter);
		params.put("CompletedBefore", _completedBefore);
		params.put("WorkflowDefinition_Selected", _workflowDefinition_Selected == null ? null : _workflowDefinition_Selected.getMendixObject());
		return (java.lang.Long) Core.microflowCall("WorkflowCommons.SUB_Worklow_CountOverdue").withParams(params).execute(context);
	}
}