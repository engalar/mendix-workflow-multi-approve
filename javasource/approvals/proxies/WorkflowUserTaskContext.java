// This file was generated by Mendix Studio Pro.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package approvals.proxies;

public class WorkflowUserTaskContext
{
	private final com.mendix.systemwideinterfaces.core.IMendixObject workflowUserTaskContextMendixObject;

	private final com.mendix.systemwideinterfaces.core.IContext context;

	/**
	 * Internal name of this entity
	 */
	public static final java.lang.String entityName = "Approvals.WorkflowUserTaskContext";

	/**
	 * Enum describing members of this entity
	 */
	public enum MemberNames
	{
		IsCountersign("IsCountersign"),
		ApprovalPersonCount("ApprovalPersonCount"),
		WorkflowUserTaskContext_WorkflowUserTask("Approvals.WorkflowUserTaskContext_WorkflowUserTask"),
		WorkflowUserTaskContext_MendixSSOUser_ApproverList("Approvals.WorkflowUserTaskContext_MendixSSOUser_ApproverList");

		private java.lang.String metaName;

		MemberNames(java.lang.String s)
		{
			metaName = s;
		}

		@java.lang.Override
		public java.lang.String toString()
		{
			return metaName;
		}
	}

	public WorkflowUserTaskContext(com.mendix.systemwideinterfaces.core.IContext context)
	{
		this(context, com.mendix.core.Core.instantiate(context, "Approvals.WorkflowUserTaskContext"));
	}

	protected WorkflowUserTaskContext(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject workflowUserTaskContextMendixObject)
	{
		if (workflowUserTaskContextMendixObject == null)
			throw new java.lang.IllegalArgumentException("The given object cannot be null.");
		if (!com.mendix.core.Core.isSubClassOf("Approvals.WorkflowUserTaskContext", workflowUserTaskContextMendixObject.getType()))
			throw new java.lang.IllegalArgumentException("The given object is not a Approvals.WorkflowUserTaskContext");

		this.workflowUserTaskContextMendixObject = workflowUserTaskContextMendixObject;
		this.context = context;
	}

	/**
	 * @deprecated Use 'WorkflowUserTaskContext.load(IContext, IMendixIdentifier)' instead.
	 */
	@java.lang.Deprecated
	public static approvals.proxies.WorkflowUserTaskContext initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		return approvals.proxies.WorkflowUserTaskContext.load(context, mendixIdentifier);
	}

	/**
	 * Initialize a proxy using context (recommended). This context will be used for security checking when the get- and set-methods without context parameters are called.
	 * The get- and set-methods with context parameter should be used when for instance sudo access is necessary (IContext.createSudoClone() can be used to obtain sudo access).
	 */
	public static approvals.proxies.WorkflowUserTaskContext initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject mendixObject)
	{
		return new approvals.proxies.WorkflowUserTaskContext(context, mendixObject);
	}

	public static approvals.proxies.WorkflowUserTaskContext load(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		com.mendix.systemwideinterfaces.core.IMendixObject mendixObject = com.mendix.core.Core.retrieveId(context, mendixIdentifier);
		return approvals.proxies.WorkflowUserTaskContext.initialize(context, mendixObject);
	}

	public static java.util.List<approvals.proxies.WorkflowUserTaskContext> load(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String xpathConstraint) throws com.mendix.core.CoreException
	{
		java.util.List<approvals.proxies.WorkflowUserTaskContext> result = new java.util.ArrayList<approvals.proxies.WorkflowUserTaskContext>();
		for (com.mendix.systemwideinterfaces.core.IMendixObject obj : com.mendix.core.Core.retrieveXPathQuery(context, "//Approvals.WorkflowUserTaskContext" + xpathConstraint))
			result.add(approvals.proxies.WorkflowUserTaskContext.initialize(context, obj));
		return result;
	}

	/**
	 * Commit the changes made on this proxy object.
	 */
	public final void commit() throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Commit the changes made on this proxy object using the specified context.
	 */
	public final void commit(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Delete the object.
	 */
	public final void delete()
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}

	/**
	 * Delete the object using the specified context.
	 */
	public final void delete(com.mendix.systemwideinterfaces.core.IContext context)
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}
	/**
	 * @return value of IsCountersign
	 */
	public final java.lang.Boolean getIsCountersign()
	{
		return getIsCountersign(getContext());
	}

	/**
	 * @param context
	 * @return value of IsCountersign
	 */
	public final java.lang.Boolean getIsCountersign(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Boolean) getMendixObject().getValue(context, MemberNames.IsCountersign.toString());
	}

	/**
	 * Set value of IsCountersign
	 * @param iscountersign
	 */
	public final void setIsCountersign(java.lang.Boolean iscountersign)
	{
		setIsCountersign(getContext(), iscountersign);
	}

	/**
	 * Set value of IsCountersign
	 * @param context
	 * @param iscountersign
	 */
	public final void setIsCountersign(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Boolean iscountersign)
	{
		getMendixObject().setValue(context, MemberNames.IsCountersign.toString(), iscountersign);
	}

	/**
	 * @return value of ApprovalPersonCount
	 */
	public final java.lang.Integer getApprovalPersonCount()
	{
		return getApprovalPersonCount(getContext());
	}

	/**
	 * @param context
	 * @return value of ApprovalPersonCount
	 */
	public final java.lang.Integer getApprovalPersonCount(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Integer) getMendixObject().getValue(context, MemberNames.ApprovalPersonCount.toString());
	}

	/**
	 * Set value of ApprovalPersonCount
	 * @param approvalpersoncount
	 */
	public final void setApprovalPersonCount(java.lang.Integer approvalpersoncount)
	{
		setApprovalPersonCount(getContext(), approvalpersoncount);
	}

	/**
	 * Set value of ApprovalPersonCount
	 * @param context
	 * @param approvalpersoncount
	 */
	public final void setApprovalPersonCount(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Integer approvalpersoncount)
	{
		getMendixObject().setValue(context, MemberNames.ApprovalPersonCount.toString(), approvalpersoncount);
	}

	/**
	 * @return value of WorkflowUserTaskContext_WorkflowUserTask
	 */
	public final system.proxies.WorkflowUserTask getWorkflowUserTaskContext_WorkflowUserTask() throws com.mendix.core.CoreException
	{
		return getWorkflowUserTaskContext_WorkflowUserTask(getContext());
	}

	/**
	 * @param context
	 * @return value of WorkflowUserTaskContext_WorkflowUserTask
	 */
	public final system.proxies.WorkflowUserTask getWorkflowUserTaskContext_WorkflowUserTask(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		system.proxies.WorkflowUserTask result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.WorkflowUserTaskContext_WorkflowUserTask.toString());
		if (identifier != null)
			result = system.proxies.WorkflowUserTask.load(context, identifier);
		return result;
	}

	/**
	 * Set value of WorkflowUserTaskContext_WorkflowUserTask
	 * @param workflowusertaskcontext_workflowusertask
	 */
	public final void setWorkflowUserTaskContext_WorkflowUserTask(system.proxies.WorkflowUserTask workflowusertaskcontext_workflowusertask)
	{
		setWorkflowUserTaskContext_WorkflowUserTask(getContext(), workflowusertaskcontext_workflowusertask);
	}

	/**
	 * Set value of WorkflowUserTaskContext_WorkflowUserTask
	 * @param context
	 * @param workflowusertaskcontext_workflowusertask
	 */
	public final void setWorkflowUserTaskContext_WorkflowUserTask(com.mendix.systemwideinterfaces.core.IContext context, system.proxies.WorkflowUserTask workflowusertaskcontext_workflowusertask)
	{
		if (workflowusertaskcontext_workflowusertask == null)
			getMendixObject().setValue(context, MemberNames.WorkflowUserTaskContext_WorkflowUserTask.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.WorkflowUserTaskContext_WorkflowUserTask.toString(), workflowusertaskcontext_workflowusertask.getMendixObject().getId());
	}

	/**
	 * @return value of WorkflowUserTaskContext_MendixSSOUser_ApproverList
	 */
	public final java.util.List<mendixsso.proxies.MendixSSOUser> getWorkflowUserTaskContext_MendixSSOUser_ApproverList() throws com.mendix.core.CoreException
	{
		return getWorkflowUserTaskContext_MendixSSOUser_ApproverList(getContext());
	}

	/**
	 * @param context
	 * @return value of WorkflowUserTaskContext_MendixSSOUser_ApproverList
	 */
	@SuppressWarnings("unchecked")
	public final java.util.List<mendixsso.proxies.MendixSSOUser> getWorkflowUserTaskContext_MendixSSOUser_ApproverList(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		java.util.List<mendixsso.proxies.MendixSSOUser> result = new java.util.ArrayList<mendixsso.proxies.MendixSSOUser>();
		Object valueObject = getMendixObject().getValue(context, MemberNames.WorkflowUserTaskContext_MendixSSOUser_ApproverList.toString());
		if (valueObject == null)
			return result;
		for (com.mendix.systemwideinterfaces.core.IMendixObject mendixObject : com.mendix.core.Core.retrieveIdList(context, (java.util.List<com.mendix.systemwideinterfaces.core.IMendixIdentifier>) valueObject))
			result.add(mendixsso.proxies.MendixSSOUser.initialize(context, mendixObject));
		return result;
	}

	/**
	 * Set value of WorkflowUserTaskContext_MendixSSOUser_ApproverList
	 * @param workflowusertaskcontext_mendixssouser_approverlist
	 */
	public final void setWorkflowUserTaskContext_MendixSSOUser_ApproverList(java.util.List<mendixsso.proxies.MendixSSOUser> workflowusertaskcontext_mendixssouser_approverlist)
	{
		setWorkflowUserTaskContext_MendixSSOUser_ApproverList(getContext(), workflowusertaskcontext_mendixssouser_approverlist);
	}

	/**
	 * Set value of WorkflowUserTaskContext_MendixSSOUser_ApproverList
	 * @param context
	 * @param workflowusertaskcontext_mendixssouser_approverlist
	 */
	public final void setWorkflowUserTaskContext_MendixSSOUser_ApproverList(com.mendix.systemwideinterfaces.core.IContext context, java.util.List<mendixsso.proxies.MendixSSOUser> workflowusertaskcontext_mendixssouser_approverlist)
	{
		java.util.List<com.mendix.systemwideinterfaces.core.IMendixIdentifier> identifiers = new java.util.ArrayList<com.mendix.systemwideinterfaces.core.IMendixIdentifier>();
		for (mendixsso.proxies.MendixSSOUser proxyObject : workflowusertaskcontext_mendixssouser_approverlist)
			identifiers.add(proxyObject.getMendixObject().getId());
		getMendixObject().setValue(context, MemberNames.WorkflowUserTaskContext_MendixSSOUser_ApproverList.toString(), identifiers);
	}

	/**
	 * @return the IMendixObject instance of this proxy for use in the Core interface.
	 */
	public final com.mendix.systemwideinterfaces.core.IMendixObject getMendixObject()
	{
		return workflowUserTaskContextMendixObject;
	}

	/**
	 * @return the IContext instance of this proxy, or null if no IContext instance was specified at initialization.
	 */
	public final com.mendix.systemwideinterfaces.core.IContext getContext()
	{
		return context;
	}

	@java.lang.Override
	public boolean equals(Object obj)
	{
		if (obj == this)
			return true;

		if (obj != null && getClass().equals(obj.getClass()))
		{
			final approvals.proxies.WorkflowUserTaskContext that = (approvals.proxies.WorkflowUserTaskContext) obj;
			return getMendixObject().equals(that.getMendixObject());
		}
		return false;
	}

	@java.lang.Override
	public int hashCode()
	{
		return getMendixObject().hashCode();
	}

	/**
	 * @return String name of this class
	 */
	public static java.lang.String getType()
	{
		return "Approvals.WorkflowUserTaskContext";
	}

	/**
	 * @return String GUID from this object, format: ID_0000000000
	 * @deprecated Use getMendixObject().getId().toLong() to get a unique identifier for this object.
	 */
	@java.lang.Deprecated
	public java.lang.String getGUID()
	{
		return "ID_" + getMendixObject().getId().toLong();
	}
}
